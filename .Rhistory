add_trace(
x = c(0, data$x[1]), y = c(0, data$y[1]), z = c(0, data$z[1]),
type = 'scatter3d', mode = 'lines',
line = list(color = data$colors[1], width = 4),
hoverinfo = "none",
showlegend = FALSE
) %>%
add_trace(
x = c(0, data$x[2]), y = c(0, data$y[2]), z = c(0, data$z[2]),
type = 'scatter3d', mode = 'lines',
line = list(color = data$colors[2], width = 4),
hoverinfo = "none",
showlegend = FALSE
) %>%
add_trace(
x = c(0, data$x[3]), y = c(0, data$y[3]), z = c(0, data$z[3]),
type = 'scatter3d', mode = 'lines',
line = list(color = data$colors[3], width = 4),
hoverinfo = "none",
showlegend = FALSE
) %>%
add_trace(
x = c(0, data$x[4]), y = c(0, data$y[4]), z = c(0, data$z[4]),
type = 'scatter3d', mode = 'lines',
line = list(color = data$colors[4], width = 4),
hoverinfo = "none",
showlegend = FALSE
) %>%
add_trace(
x = c(0, data$x[5]), y = c(0, data$y[5]), z = c(0, data$z[5]),
type = 'scatter3d', mode = 'lines',
line = list(color = data$colors[5], width = 4),
hoverinfo = "none",
showlegend = FALSE
) %>%
layout(title = list(text = "The Solution (a\')",
font = list(size = 20)),
scene = list(xaxis = list(title = 'X-axis', range = c(-0.5, 0.75)),
yaxis = list(title = 'Y-axis', range = c(-0.5, 0.75)),
zaxis = list(title = 'Z-axis', range = c(-0.5, 0.75)),
aspectmode = "cube"),
margin = list(t = 100)
)
# Create a data frame for the color bar
color_bar_data <- data.frame(
x = 0,
y = seq(min(data$w), max(data$w), length.out = 100),
color = seq(min(data$w), max(data$w), length.out = 100)
)
# Create the skinny color bar plot with labels
color_bar_plot <- ggplotly(ggplot(color_bar_data, aes(x = x, y = y, fill = color, text = paste0("w: ", round(color, 2)))) +
geom_tile(width = 5) +  # Adjust width to make the bar skinny
scale_fill_gradient(low = "blue", high = "red", name = "Color Bar") +
theme_void() +
theme(
legend.position = "none",
axis.text.x = element_blank(),  # Remove x-axis text
axis.text.y = element_text(size = 10),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 14, angle = 90, vjust = 0.5),
panel.grid = element_blank(),  # Turn off gridlines
panel.grid.major = element_blank(),  # Turn off major gridlines
panel.grid.minor = element_blank(),   # Turn off minor gridlines
)+
labs(y = "W-axis")+
coord_cartesian(clip = "off") +  # Ensure labels are not clipped
theme(
plot.margin = margin(t = 20, b = 0, l = 50, r = 0)  # Adjust plot margins
), tooltip = "text") %>%
layout(
hoverlabel = element_blank(),
xaxis = list(title = ""),
yaxis = list(title = "W-axis"),
height = 200,
width = 150
)
# Print the color bar plot
manipulateWidget::combineWidgets(p1, color_bar_plot, nrow = 1)
a5
0.478*a1
0.522*a2
round(0.478*a1+0.522*a2,3)
# Define the 4D vectors
a1 <- c(0.539, 0.000, 0.173, 0.825)
a2 <- c(0.316, 0.300, 0.346, 0.831)
a3 <- c(0.458, 0.265, 0.245, 0.812)
a4 <- c(0.468, 0.000, 0.458, 0.755)
a5 <- round(0.478*a1+0.522*a2,3)
# Create a data frame with the vectors
data <- data.frame(
x = c(a1[1], a2[1], a3[1], a4[1], a5[1]),
y = c(a1[2], a2[2], a3[2], a4[2], a5[2]),
z = c(a1[3], a2[3], a3[3], a4[3], a5[3]),
w = c(a1[4], a2[4], a3[4], a4[4], a5[4])
)
# Define a color ramp function
color_ramp <- colorRamp(c("blue", "red"))
# Map the fourth dimension to colors
data$colors <- rgb(color_ramp( (data$w - min(data$w)) / (max(data$w) - min(data$w)) ), maxColorValue = 255)
# Create the 3D plot
p1 <- plot_ly() %>%
add_trace(
x = data$x[1], y = data$y[1], z = data$z[1],
type = 'scatter3d', mode = 'markers',
marker = list(size = 3),
name = 'a<sub>1</sub>',
hovertext = paste(" x: ", data$x[1], "<br>", "y: ", "0.000", "<br>", "z: ",
data$z[1], "<br>", "w: ", data$w[1]),  # Add w value to hovertext
hoverinfo = "name+text"
) %>%
add_trace(
x = data$x[2], y = data$y[2], z = data$z[2],
type = 'scatter3d', mode = 'markers',
marker = list(size = 3),
name = 'a<sub>2</sub>',
hovertext = paste(" x: ", data$x[2], "<br>", "y: ", "0.300", "<br>", "z: ",
data$z[2], "<br>", "w: ", data$w[2]),  # Add w value to hovertext
hoverinfo = "name+text"
) %>%
add_trace(
x = data$x[3], y = data$y[3], z = data$z[3],
type = 'scatter3d', mode = 'markers',
marker = list(size = 3),
name = 'a<sub>3</sub>',
hovertext = paste(" x: ", data$x[3], "<br>", "y: ", data$y[3], "<br>", "z: ",
data$z[3], "<br>", "w: ", data$w[3]),  # Add w value to hovertext
hoverinfo = "name+text"
) %>%
add_trace(
x = data$x[4], y = data$y[4], z = data$z[4],
type = 'scatter3d', mode = 'markers',
marker = list(size = 3),
name = 'a<sub>4</sub>',
hovertext = paste(" x: ", data$x[4], "<br>", "y: ", "0.000", "<br>", "z: ",
data$z[4], "<br>", "w: ", data$w[4]),  # Add w value to hovertext
hoverinfo = "name+text"
) %>%
add_trace(
x = data$x[5], y = data$y[5], z = data$z[5],
type = 'scatter3d', mode = 'markers',
marker = list(size = 3),
name = 'a\'',
hovertext = paste(" x: ", data$x[5], "<br>", "y: ", data$y[5], "<br>", "z: ",
data$z[5], "<br>", "w: ", data$w[5]),  # Add w value to hovertext
hoverinfo = "name+text"
) %>%
# Add lines for each vector with a single color
add_trace(
x = c(0, data$x[1]), y = c(0, data$y[1]), z = c(0, data$z[1]),
type = 'scatter3d', mode = 'lines',
line = list(color = data$colors[1], width = 4),
hoverinfo = "none",
showlegend = FALSE
) %>%
add_trace(
x = c(0, data$x[2]), y = c(0, data$y[2]), z = c(0, data$z[2]),
type = 'scatter3d', mode = 'lines',
line = list(color = data$colors[2], width = 4),
hoverinfo = "none",
showlegend = FALSE
) %>%
add_trace(
x = c(0, data$x[3]), y = c(0, data$y[3]), z = c(0, data$z[3]),
type = 'scatter3d', mode = 'lines',
line = list(color = data$colors[3], width = 4),
hoverinfo = "none",
showlegend = FALSE
) %>%
add_trace(
x = c(0, data$x[4]), y = c(0, data$y[4]), z = c(0, data$z[4]),
type = 'scatter3d', mode = 'lines',
line = list(color = data$colors[4], width = 4),
hoverinfo = "none",
showlegend = FALSE
) %>%
add_trace(
x = c(0, data$x[5]), y = c(0, data$y[5]), z = c(0, data$z[5]),
type = 'scatter3d', mode = 'lines',
line = list(color = data$colors[5], width = 4),
hoverinfo = "none",
showlegend = FALSE
) %>%
layout(title = list(text = "The Solution (a\')",
font = list(size = 20)),
scene = list(xaxis = list(title = 'X-axis', range = c(-0.5, 0.75)),
yaxis = list(title = 'Y-axis', range = c(-0.5, 0.75)),
zaxis = list(title = 'Z-axis', range = c(-0.5, 0.75)),
aspectmode = "cube"),
margin = list(t = 100)
)
# Create a data frame for the color bar
color_bar_data <- data.frame(
x = 0,
y = seq(min(data$w), max(data$w), length.out = 100),
color = seq(min(data$w), max(data$w), length.out = 100)
)
# Create the skinny color bar plot with labels
color_bar_plot <- ggplotly(ggplot(color_bar_data, aes(x = x, y = y, fill = color, text = paste0("w: ", round(color, 2)))) +
geom_tile(width = 5) +  # Adjust width to make the bar skinny
scale_fill_gradient(low = "blue", high = "red", name = "Color Bar") +
theme_void() +
theme(
legend.position = "none",
axis.text.x = element_blank(),  # Remove x-axis text
axis.text.y = element_text(size = 10),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 14, angle = 90, vjust = 0.5),
panel.grid = element_blank(),  # Turn off gridlines
panel.grid.major = element_blank(),  # Turn off major gridlines
panel.grid.minor = element_blank(),   # Turn off minor gridlines
)+
labs(y = "W-axis")+
coord_cartesian(clip = "off") +  # Ensure labels are not clipped
theme(
plot.margin = margin(t = 20, b = 0, l = 50, r = 0)  # Adjust plot margins
), tooltip = "text") %>%
layout(
hoverlabel = element_blank(),
xaxis = list(title = ""),
yaxis = list(title = "W-axis"),
height = 200,
width = 150
)
# Print the color bar plot
manipulateWidget::combineWidgets(p1, color_bar_plot, nrow = 1)
0.5*a1+0.5*a2
# Define the 4D vectors
a1 <- c(0.539, 0.000, 0.173, 0.825)
a2 <- c(0.316, 0.300, 0.346, 0.831)
a3 <- c(0.458, 0.265, 0.245, 0.812)
a4 <- c(0.468, 0.000, 0.458, 0.755)
a5 <- c(0.437, 0.217, 0.277, 0.828)
# Create a data frame with the vectors
data <- data.frame(
x = c(a1[1], a2[1], a3[1], a4[1], a5[1]),
y = c(a1[2], a2[2], a3[2], a4[2], a5[2]),
z = c(a1[3], a2[3], a3[3], a4[3], a5[3]),
w = c(a1[4], a2[4], a3[4], a4[4], a5[4])
)
# Define a color ramp function
color_ramp <- colorRamp(c("blue", "red"))
# Map the fourth dimension to colors
data$colors <- rgb(color_ramp( (data$w - min(data$w)) / (max(data$w) - min(data$w)) ), maxColorValue = 255)
# Create the 3D plot
p1 <- plot_ly() %>%
add_trace(
x = data$x[1], y = data$y[1], z = data$z[1],
type = 'scatter3d', mode = 'markers',
marker = list(size = 3),
name = 'a<sub>1</sub>',
hovertext = paste(" x: ", data$x[1], "<br>", "y: ", "0.000", "<br>", "z: ",
data$z[1], "<br>", "w: ", data$w[1]),  # Add w value to hovertext
hoverinfo = "name+text"
) %>%
add_trace(
x = data$x[2], y = data$y[2], z = data$z[2],
type = 'scatter3d', mode = 'markers',
marker = list(size = 3),
name = 'a<sub>2</sub>',
hovertext = paste(" x: ", data$x[2], "<br>", "y: ", "0.300", "<br>", "z: ",
data$z[2], "<br>", "w: ", data$w[2]),  # Add w value to hovertext
hoverinfo = "name+text"
) %>%
add_trace(
x = data$x[3], y = data$y[3], z = data$z[3],
type = 'scatter3d', mode = 'markers',
marker = list(size = 3),
name = 'a<sub>3</sub>',
hovertext = paste(" x: ", data$x[3], "<br>", "y: ", data$y[3], "<br>", "z: ",
data$z[3], "<br>", "w: ", data$w[3]),  # Add w value to hovertext
hoverinfo = "name+text"
) %>%
add_trace(
x = data$x[4], y = data$y[4], z = data$z[4],
type = 'scatter3d', mode = 'markers',
marker = list(size = 3),
name = 'a<sub>4</sub>',
hovertext = paste(" x: ", data$x[4], "<br>", "y: ", "0.000", "<br>", "z: ",
data$z[4], "<br>", "w: ", data$w[4]),  # Add w value to hovertext
hoverinfo = "name+text"
) %>%
add_trace(
x = data$x[5], y = data$y[5], z = data$z[5],
type = 'scatter3d', mode = 'markers',
marker = list(size = 3),
name = 'a\'',
hovertext = paste(" x: ", data$x[5], "<br>", "y: ", data$y[5], "<br>", "z: ",
data$z[5], "<br>", "w: ", data$w[5]),  # Add w value to hovertext
hoverinfo = "name+text"
) %>%
# Add lines for each vector with a single color
add_trace(
x = c(0, data$x[1]), y = c(0, data$y[1]), z = c(0, data$z[1]),
type = 'scatter3d', mode = 'lines',
line = list(color = data$colors[1], width = 4),
hoverinfo = "none",
showlegend = FALSE
) %>%
add_trace(
x = c(0, data$x[2]), y = c(0, data$y[2]), z = c(0, data$z[2]),
type = 'scatter3d', mode = 'lines',
line = list(color = data$colors[2], width = 4),
hoverinfo = "none",
showlegend = FALSE
) %>%
add_trace(
x = c(0, data$x[3]), y = c(0, data$y[3]), z = c(0, data$z[3]),
type = 'scatter3d', mode = 'lines',
line = list(color = data$colors[3], width = 4),
hoverinfo = "none",
showlegend = FALSE
) %>%
add_trace(
x = c(0, data$x[4]), y = c(0, data$y[4]), z = c(0, data$z[4]),
type = 'scatter3d', mode = 'lines',
line = list(color = data$colors[4], width = 4),
hoverinfo = "none",
showlegend = FALSE
) %>%
add_trace(
x = c(0, data$x[5]), y = c(0, data$y[5]), z = c(0, data$z[5]),
type = 'scatter3d', mode = 'lines',
line = list(color = data$colors[5], width = 4),
hoverinfo = "none",
showlegend = FALSE
) %>%
layout(title = list(text = "The Solution (a\')",
font = list(size = 20)),
scene = list(xaxis = list(title = 'X-axis', range = c(-0.5, 0.75)),
yaxis = list(title = 'Y-axis', range = c(-0.5, 0.75)),
zaxis = list(title = 'Z-axis', range = c(-0.5, 0.75)),
aspectmode = "cube"),
margin = list(t = 100)
)
# Create a data frame for the color bar
color_bar_data <- data.frame(
x = 0,
y = seq(min(data$w), max(data$w), length.out = 100),
color = seq(min(data$w), max(data$w), length.out = 100)
)
# Create the skinny color bar plot with labels
color_bar_plot <- ggplotly(ggplot(color_bar_data, aes(x = x, y = y, fill = color, text = paste0("w: ", round(color, 2)))) +
geom_tile(width = 5) +  # Adjust width to make the bar skinny
scale_fill_gradient(low = "blue", high = "red", name = "Color Bar") +
theme_void() +
theme(
legend.position = "none",
axis.text.x = element_blank(),  # Remove x-axis text
axis.text.y = element_text(size = 10),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 14, angle = 90, vjust = 0.5),
panel.grid = element_blank(),  # Turn off gridlines
panel.grid.major = element_blank(),  # Turn off major gridlines
panel.grid.minor = element_blank(),   # Turn off minor gridlines
)+
labs(y = "W-axis")+
coord_cartesian(clip = "off") +  # Ensure labels are not clipped
theme(
plot.margin = margin(t = 20, b = 0, l = 50, r = 0)  # Adjust plot margins
), tooltip = "text") %>%
layout(
hoverlabel = element_blank(),
xaxis = list(title = ""),
yaxis = list(title = "W-axis"),
height = 200,
width = 150
)
# Print the color bar plot
manipulateWidget::combineWidgets(p1, color_bar_plot, nrow = 1)
# Define the 4D vectors
a1 <- c(0.539, 0.000, 0.173, 0.825)
a2 <- c(0.316, 0.300, 0.346, 0.831)
a3 <- c(0.458, 0.265, 0.245, 0.812)
a4 <- c(0.468, 0.000, 0.458, 0.755)
a5 <- c(0.442, 0.212, 0.274, 0.828)
# Create a data frame with the vectors
data <- data.frame(
x = c(a1[1], a2[1], a3[1], a4[1], a5[1]),
y = c(a1[2], a2[2], a3[2], a4[2], a5[2]),
z = c(a1[3], a2[3], a3[3], a4[3], a5[3]),
w = c(a1[4], a2[4], a3[4], a4[4], a5[4])
)
# Define a color ramp function
color_ramp <- colorRamp(c("blue", "red"))
# Map the fourth dimension to colors
data$colors <- rgb(color_ramp( (data$w - min(data$w)) / (max(data$w) - min(data$w)) ), maxColorValue = 255)
# Create the 3D plot
p1 <- plot_ly() %>%
add_trace(
x = data$x[1], y = data$y[1], z = data$z[1],
type = 'scatter3d', mode = 'markers',
marker = list(size = 3),
name = 'a<sub>1</sub>',
hovertext = paste(" x: ", data$x[1], "<br>", "y: ", "0.000", "<br>", "z: ",
data$z[1], "<br>", "w: ", data$w[1]),  # Add w value to hovertext
hoverinfo = "name+text"
) %>%
add_trace(
x = data$x[2], y = data$y[2], z = data$z[2],
type = 'scatter3d', mode = 'markers',
marker = list(size = 3),
name = 'a<sub>2</sub>',
hovertext = paste(" x: ", data$x[2], "<br>", "y: ", "0.300", "<br>", "z: ",
data$z[2], "<br>", "w: ", data$w[2]),  # Add w value to hovertext
hoverinfo = "name+text"
) %>%
add_trace(
x = data$x[3], y = data$y[3], z = data$z[3],
type = 'scatter3d', mode = 'markers',
marker = list(size = 3),
name = 'a<sub>3</sub>',
hovertext = paste(" x: ", data$x[3], "<br>", "y: ", data$y[3], "<br>", "z: ",
data$z[3], "<br>", "w: ", data$w[3]),  # Add w value to hovertext
hoverinfo = "name+text"
) %>%
add_trace(
x = data$x[4], y = data$y[4], z = data$z[4],
type = 'scatter3d', mode = 'markers',
marker = list(size = 3),
name = 'a<sub>4</sub>',
hovertext = paste(" x: ", data$x[4], "<br>", "y: ", "0.000", "<br>", "z: ",
data$z[4], "<br>", "w: ", data$w[4]),  # Add w value to hovertext
hoverinfo = "name+text"
) %>%
add_trace(
x = data$x[5], y = data$y[5], z = data$z[5],
type = 'scatter3d', mode = 'markers',
marker = list(size = 3),
name = 'a\'',
hovertext = paste(" x: ", data$x[5], "<br>", "y: ", data$y[5], "<br>", "z: ",
data$z[5], "<br>", "w: ", data$w[5]),  # Add w value to hovertext
hoverinfo = "name+text"
) %>%
# Add lines for each vector with a single color
add_trace(
x = c(0, data$x[1]), y = c(0, data$y[1]), z = c(0, data$z[1]),
type = 'scatter3d', mode = 'lines',
line = list(color = data$colors[1], width = 4),
hoverinfo = "none",
showlegend = FALSE
) %>%
add_trace(
x = c(0, data$x[2]), y = c(0, data$y[2]), z = c(0, data$z[2]),
type = 'scatter3d', mode = 'lines',
line = list(color = data$colors[2], width = 4),
hoverinfo = "none",
showlegend = FALSE
) %>%
add_trace(
x = c(0, data$x[3]), y = c(0, data$y[3]), z = c(0, data$z[3]),
type = 'scatter3d', mode = 'lines',
line = list(color = data$colors[3], width = 4),
hoverinfo = "none",
showlegend = FALSE
) %>%
add_trace(
x = c(0, data$x[4]), y = c(0, data$y[4]), z = c(0, data$z[4]),
type = 'scatter3d', mode = 'lines',
line = list(color = data$colors[4], width = 4),
hoverinfo = "none",
showlegend = FALSE
) %>%
add_trace(
x = c(0, data$x[5]), y = c(0, data$y[5]), z = c(0, data$z[5]),
type = 'scatter3d', mode = 'lines',
line = list(color = data$colors[5], width = 4),
hoverinfo = "none",
showlegend = FALSE
) %>%
layout(title = list(text = "Plot of a\'",
font = list(size = 20)),
scene = list(xaxis = list(title = 'X-axis', range = c(-0.5, 0.75)),
yaxis = list(title = 'Y-axis', range = c(-0.5, 0.75)),
zaxis = list(title = 'Z-axis', range = c(-0.5, 0.75)),
aspectmode = "cube"),
margin = list(t = 100)
)
# Create a data frame for the color bar
color_bar_data <- data.frame(
x = 0,
y = seq(min(data$w), max(data$w), length.out = 100),
color = seq(min(data$w), max(data$w), length.out = 100)
)
# Create the skinny color bar plot with labels
color_bar_plot <- ggplotly(ggplot(color_bar_data, aes(x = x, y = y, fill = color, text = paste0("w: ", round(color, 2)))) +
geom_tile(width = 5) +  # Adjust width to make the bar skinny
scale_fill_gradient(low = "blue", high = "red", name = "Color Bar") +
theme_void() +
theme(
legend.position = "none",
axis.text.x = element_blank(),  # Remove x-axis text
axis.text.y = element_text(size = 10),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 14, angle = 90, vjust = 0.5),
panel.grid = element_blank(),  # Turn off gridlines
panel.grid.major = element_blank(),  # Turn off major gridlines
panel.grid.minor = element_blank(),   # Turn off minor gridlines
)+
labs(y = "W-axis")+
coord_cartesian(clip = "off") +  # Ensure labels are not clipped
theme(
plot.margin = margin(t = 20, b = 0, l = 50, r = 0)  # Adjust plot margins
), tooltip = "text") %>%
layout(
hoverlabel = element_blank(),
xaxis = list(title = ""),
yaxis = list(title = "W-axis"),
height = 200,
width = 150
)
# Print the color bar plot
manipulateWidget::combineWidgets(p1, color_bar_plot, nrow = 1)
